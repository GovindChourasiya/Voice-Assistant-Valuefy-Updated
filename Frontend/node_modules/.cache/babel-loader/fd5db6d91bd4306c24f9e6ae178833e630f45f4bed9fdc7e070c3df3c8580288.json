{"ast":null,"code":"// import { useState } from \"react\";\n// import { CheckCircle, Loader2 } from \"lucide-react\";\n// import { clsx } from \"clsx\";\n\n// export default function AnimatedButton({ onClick, isLoading, label }) {\n//   const [clicked, setClicked] = useState(false);\n\n//   const handleClick = () => {\n//     if (!isLoading) {\n//       setClicked(true);\n//       onClick();\n//       setTimeout(() => setClicked(false), 600); // Reset animation\n//     }\n//   };\n\n//   return (\n//     <button\n//       onClick={handleClick}\n//       disabled={isLoading}\n//       className={clsx(\n//         \"btn d-flex align-items-center gap-2 position-relative overflow-hidden shadow\",\n//         isLoading ? \"btn-secondary disabled\" : \"btn-success\"\n//       )}\n//       style={{\n//         transition: \"all 0.3s ease-in-out\",\n//       }}\n//     >\n//       {/* Ripple effect */}\n//       <span\n//         className={clsx(\n//           \"position-absolute w-100 h-100 bg-success\",\n//           clicked ? \"opacity-25\" : \"opacity-0\"\n//         )}\n//         style={{\n//           transition: \"all 0.5s ease-out\",\n//           transform: clicked ? \"scale(1)\" : \"scale(0)\",\n//         }}\n//       />\n\n//       {/* Loading or icon */}\n//       {isLoading ? (\n//         <Loader2 className=\"spinner-border spinner-border-sm text-white\" />\n//       ) : (\n//         <CheckCircle size={18} className=\"text-white\" />\n//       )}\n//       {label}\n// </button>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/Valuefy/virtual_assistant/src/components/AnimatedButton.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { CheckCircle, Loader2 } from \"lucide-react\";\r\n// import { clsx } from \"clsx\";\r\n\r\n// export default function AnimatedButton({ onClick, isLoading, label }) {\r\n//   const [clicked, setClicked] = useState(false);\r\n\r\n//   const handleClick = () => {\r\n//     if (!isLoading) {\r\n//       setClicked(true);\r\n//       onClick();\r\n//       setTimeout(() => setClicked(false), 600); // Reset animation\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <button\r\n//       onClick={handleClick}\r\n//       disabled={isLoading}\r\n//       className={clsx(\r\n//         \"btn d-flex align-items-center gap-2 position-relative overflow-hidden shadow\",\r\n//         isLoading ? \"btn-secondary disabled\" : \"btn-success\"\r\n//       )}\r\n//       style={{\r\n//         transition: \"all 0.3s ease-in-out\",\r\n//       }}\r\n//     >\r\n//       {/* Ripple effect */}\r\n//       <span\r\n//         className={clsx(\r\n//           \"position-absolute w-100 h-100 bg-success\",\r\n//           clicked ? \"opacity-25\" : \"opacity-0\"\r\n//         )}\r\n//         style={{\r\n//           transition: \"all 0.5s ease-out\",\r\n//           transform: clicked ? \"scale(1)\" : \"scale(0)\",\r\n//         }}\r\n//       />\r\n\r\n//       {/* Loading or icon */}\r\n//       {isLoading ? (\r\n//         <Loader2 className=\"spinner-border spinner-border-sm text-white\" />\r\n//       ) : (\r\n//         <CheckCircle size={18} className=\"text-white\" />\r\n//       )}\r\n//       {label}\r\n    // </button>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}