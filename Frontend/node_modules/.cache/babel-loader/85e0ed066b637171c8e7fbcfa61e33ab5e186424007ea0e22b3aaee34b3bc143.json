{"ast":null,"code":"var _jsxFileName = \"D:\\\\Valuefy\\\\Frontend\\\\src\\\\components\\\\AnimatedButton.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { CheckCircle, Loader2 } from \"lucide-react\";\nimport { clsx } from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimatedButton({\n  onClick,\n  isLoading,\n  label\n}) {\n  _s();\n  const [clicked, setClicked] = useState(false);\n  const handleClick = () => {\n    if (!isLoading) {\n      setClicked(true);\n      onClick();\n      setTimeout(() => setClicked(false), 600); // Reset animation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    disabled: isLoading,\n    className: clsx(\"btn d-flex align-items-center gap-2 position-relative overflow-hidden shadow\", isLoading ? \"btn-secondary disabled\" : \"btn-success\"),\n    style: {\n      transition: \"all 0.3s ease-in-out\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(\"position-absolute w-100 h-100 bg-success\", clicked ? \"opacity-25\" : \"opacity-0\"),\n      style: {\n        transition: \"all 0.5s ease-out\",\n        transform: clicked ? \"scale(1)\" : \"scale(0)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader2, {\n      className: \"spinner-border spinner-border-sm text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CheckCircle, {\n      size: 18,\n      className: \"text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimatedButton, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n_c = AnimatedButton;\nvar _c;\n$RefreshReg$(_c, \"AnimatedButton\");","map":{"version":3,"names":["useState","CheckCircle","Loader2","clsx","jsxDEV","_jsxDEV","AnimatedButton","onClick","isLoading","label","_s","clicked","setClicked","handleClick","setTimeout","disabled","className","style","transition","children","transform","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/Valuefy/Frontend/src/components/AnimatedButton.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { CheckCircle, Loader2 } from \"lucide-react\";\r\nimport { clsx } from \"clsx\";\r\n\r\nexport default function AnimatedButton({ onClick, isLoading, label }) {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (!isLoading) {\r\n      setClicked(true);\r\n      onClick();\r\n      setTimeout(() => setClicked(false), 600); // Reset animation\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleClick}\r\n      disabled={isLoading}\r\n      className={clsx(\r\n        \"btn d-flex align-items-center gap-2 position-relative overflow-hidden shadow\",\r\n        isLoading ? \"btn-secondary disabled\" : \"btn-success\"\r\n      )}\r\n      style={{\r\n        transition: \"all 0.3s ease-in-out\",\r\n      }}\r\n    >\r\n      {/* Ripple effect */}\r\n      <span\r\n        className={clsx(\r\n          \"position-absolute w-100 h-100 bg-success\",\r\n          clicked ? \"opacity-25\" : \"opacity-0\"\r\n        )}\r\n        style={{\r\n          transition: \"all 0.5s ease-out\",\r\n          transform: clicked ? \"scale(1)\" : \"scale(0)\",\r\n        }}\r\n      />\r\n\r\n      {/* Loading or icon */}\r\n      {isLoading ? (\r\n        <Loader2 className=\"spinner-border spinner-border-sm text-white\" />\r\n      ) : (\r\n        <CheckCircle size={18} className=\"text-white\" />\r\n      )}\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,OAAO,QAAQ,cAAc;AACnD,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,cAAcA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACL,SAAS,EAAE;MACdI,UAAU,CAAC,IAAI,CAAC;MAChBL,OAAO,CAAC,CAAC;MACTO,UAAU,CAAC,MAAMF,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEP,OAAA;IACEE,OAAO,EAAEM,WAAY;IACrBE,QAAQ,EAAEP,SAAU;IACpBQ,SAAS,EAAEb,IAAI,CACb,8EAA8E,EAC9EK,SAAS,GAAG,wBAAwB,GAAG,aACzC,CAAE;IACFS,KAAK,EAAE;MACLC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBAGFd,OAAA;MACEW,SAAS,EAAEb,IAAI,CACb,0CAA0C,EAC1CQ,OAAO,GAAG,YAAY,GAAG,WAC3B,CAAE;MACFM,KAAK,EAAE;QACLC,UAAU,EAAE,mBAAmB;QAC/BE,SAAS,EAAET,OAAO,GAAG,UAAU,GAAG;MACpC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGDhB,SAAS,gBACRH,OAAA,CAACH,OAAO;MAACc,SAAS,EAAC;IAA6C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnEnB,OAAA,CAACJ,WAAW;MAACwB,IAAI,EAAE,EAAG;MAACT,SAAS,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChD,EACAf,KAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CA5CuBJ,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}