{"ast":null,"code":"var _jsxFileName = \"D:\\\\Valuefy\\\\virtual_assistant\\\\src\\\\components\\\\VoiceRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { extractTodos } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = ({\n  onTodosExtracted\n}) => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [loading, setLoading] = useState(false);\n  const handleStart = () => {\n    resetTranscript();\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: \"en-US\"\n    });\n  };\n  const handleStop = async () => {\n    SpeechRecognition.stopListening();\n    if (!transcript) return;\n    setLoading(true);\n    const data = await extractTodos(transcript);\n    setLoading(false);\n    onTodosExtracted(data.tasks);\n  };\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: listening,\n      children: \"\\uD83C\\uDFA4 Start Speaking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      disabled: !listening,\n      children: \"\\u23F9 Stop & Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transcript: \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceRecorder, \"341e55ngCm/U9LQLyZnwIWaGZvk=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","extractTodos","jsxDEV","_jsxDEV","VoiceRecorder","onTodosExtracted","_s","transcript","listening","resetTranscript","loading","setLoading","handleStart","startListening","continuous","language","handleStop","stopListening","data","tasks","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Valuefy/virtual_assistant/src/components/VoiceRecorder.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\nimport { extractTodos } from \"../api\";\r\n\r\nconst VoiceRecorder = ({ onTodosExtracted }) => {\r\n    const { transcript, listening, resetTranscript } = useSpeechRecognition();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleStart = () => {\r\n        resetTranscript();\r\n        SpeechRecognition.startListening({ continuous: true, language: \"en-US\" });\r\n    };\r\n\r\n    const handleStop = async () => {\r\n        SpeechRecognition.stopListening();\r\n        if (!transcript) return;\r\n\r\n        setLoading(true);\r\n        const data = await extractTodos(transcript);\r\n        setLoading(false);\r\n        onTodosExtracted(data.tasks);\r\n    };\r\n\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n        return <p>Your browser does not support speech recognition.</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleStart} disabled={listening}>üé§ Start Speaking</button>\r\n            <button onClick={handleStop} disabled={!listening}>‚èπ Stop & Process</button>\r\n            {loading && <p>Processing...</p>}\r\n            <p>Transcript: {transcript}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VoiceRecorder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGT,oBAAoB,CAAC,CAAC;EACzE,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtBH,eAAe,CAAC,CAAC;IACjBV,iBAAiB,CAACc,cAAc,CAAC;MAAEC,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BjB,iBAAiB,CAACkB,aAAa,CAAC,CAAC;IACjC,IAAI,CAACV,UAAU,EAAE;IAEjBI,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMO,IAAI,GAAG,MAAMjB,YAAY,CAACM,UAAU,CAAC;IAC3CI,UAAU,CAAC,KAAK,CAAC;IACjBN,gBAAgB,CAACa,IAAI,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,IAAI,CAACpB,iBAAiB,CAACqB,gCAAgC,CAAC,CAAC,EAAE;IACvD,oBAAOjB,OAAA;MAAAkB,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnE;EAEA,oBACItB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAQuB,OAAO,EAAEd,WAAY;MAACe,QAAQ,EAAEnB,SAAU;MAAAa,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7EtB,OAAA;MAAQuB,OAAO,EAAEV,UAAW;MAACW,QAAQ,EAAE,CAACnB,SAAU;MAAAa,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3Ef,OAAO,iBAAIP,OAAA;MAAAkB,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCtB,OAAA;MAAAkB,QAAA,GAAG,cAAY,EAACd,UAAU;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd,CAAC;AAACnB,EAAA,CA/BIF,aAAa;EAAA,QACoCJ,oBAAoB;AAAA;AAAA4B,EAAA,GADrExB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}